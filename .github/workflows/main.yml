name: Python Scraper CI

on:
  push:
    branches: [ main, master, develop ] # Adjust branches as needed
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"] # Test on multiple Python versions

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies for headless Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          xvfb \
          # Minimal deps for running Chrome headless, Dockerfile has a more extensive list for Chrome itself
          # If tests run full selenium, these might need to be expanded or use a service container for chrome
          # For this example, assuming tests are well-mocked or can run with system-provided tools
          # For full browser tests in CI, consider Dockerized services (see below)

    # Optional: Install Chrome and ChromeDriver for full Selenium tests in CI
    # This makes the CI environment closer to the Dockerfile
    - name: Install Google Chrome and ChromeDriver
      run: |
        # Install Google Chrome
        sudo apt-get update
        sudo apt-get install -y wget gnupg
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor | sudo tee /usr/share/keyrings/google-chrome-keyring.gpg > /dev/null
        sudo sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        CHROME_VERSION_FULL=$(google-chrome --version | awk '{print $3}')
        echo "Installed Chrome version: $CHROME_VERSION_FULL"

        # Get the major version of Chrome
        CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION_FULL | cut -d. -f1)

        # Fetch the corresponding ChromeDriver version
        CHROMEDRIVER_VERSION=$(wget -qO- "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_MAJOR_VERSION")
        echo "Attempting to download ChromeDriver version: $CHROMEDRIVER_VERSION"

        # Download and set up ChromeDriver
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        sudo unzip /tmp/chromedriver.zip -d /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest # Ensure pytest is explicitly installed if not already via requirements for CI

    - name: Run tests with Pytest (using xvfb for headless display)
      run: |
        # xvfb-run is used if Selenium tests actually launch a browser
        # If tests are fully mocked and don't launch a browser, xvfb-run is not strictly needed
        xvfb-run -a pytest tests/test_scraper.py
        # pytest tests/test_scraper.py # if xvfb not needed for mocked tests
